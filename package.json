{
  "name": "pulsar-ide-markdown",
  "main": "./lib/main",
  "version": "0.0.1",
  "description": "An IDE package for Markdown using md-lsp or Marksman",
  "keywords": [],
  "activationHooks": [
    "source.gfm:root-scope-used",
    "text.html.markdown:root-scope-used"
  ],
  "enhancedScopes": [
    "source.gfm",
    "text.html.markdown"
  ],
  "repository": "https://github.com/savetheclocktower/pulsar-ide-markdown",
  "license": "MIT",
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "dependencies": {
    "@savetheclocktower/atom-languageclient": "^1.17.11"
  },
  "configSchema": {
    "server": {
      "title": "Language Server",
      "description": "Which language server this package should use. Choose your favorite between Marksman and md-lsp.",
      "type": "string",
      "default": "Marksman",
      "enum": ["Marksman", "md-lsp"],
      "order": 0
    },
    "binMarksman": {
      "title": "Path to Marksman",
      "default": "marksman",
      "type": "string",
      "description": "Path to your installation of `marksman`. If you've chosen “md-lsp” above, you may ignore this setting. The default value should work if `marksman` is on your `PATH; if you encounter errors, consider specifying the full, absolute path to your `marksman` binary.",
      "order": 1
    },
    "binMdLsp": {
      "title": "Path to md-lsp",
      "default": "md-lsp",
      "type": "string",
      "description": "Path to your installation of `md-lsp`. If you've chosen “Marksman” above, you may ignore this setting. The default value should work if `md-lsp` is on your `PATH; if you encounter errors, consider specifying the full, absolute path to your `md-lsp` binary.",
      "order": 2
    },

    "diagnostics": {
      "title": "Diagnostics",
      "order": 3,
      "type": "object",
      "properties": {
        "enable": {
          "title": "Enable",
          "type": "boolean",
          "default": true,
          "description": "Whether to show diagnostic messages via the `linter` package."
        },
        "ignoredCodes": {
          "title": "Ignored Codes",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "A comma-separated list of diagnostic codes that should be ignored by the linter."
        },
        "includeMessageCodeInMessageBody": {
          "title": "Include Message Code in Message Body",
          "type": "boolean",
          "default": false,
          "description": "When enabled, will include the code for a linter message at the end of its body."
        }
      }
    }
  },
  "consumedServices": {
    "linter-indie": {
      "versions": {
        "2.0.0": "consumeLinterV2"
      }
    },
    "datatip": {
      "versions": {
        "0.1.0": "consumeDatatip"
      }
    },
    "signature-help": {
      "versions": {
        "0.1.0": "consumeSignatureHelp"
      }
    },
    "atom-ide-busy-signal": {
      "versions": {
        "0.1.0": "consumeBusySignal"
      }
    }
  },
  "providedServices": {
    "intentions:list": {
      "versions": {
        "1.0.0": "provideIntentionsList"
      }
    },
    "symbol.provider": {
      "description": "Allows external sources to suggest symbols for a given file or project.",
      "versions": {
        "1.0.0": "provideSymbols"
      }
    },
    "autocomplete.provider": {
      "versions": {
        "4.0.0": "provideAutocomplete"
      }
    },
    "code-actions": {
      "versions": {
        "0.1.0": "provideCodeActions"
      }
    },
    "code-format.range": {
      "versions": {
        "0.1.0": "provideCodeFormat"
      }
    },
    "call-hierarchy": {
      "versions": {
        "0.1.0": "provideCallHierarchy"
      }
    },
    "code-highlight": {
      "versions": {
        "0.1.0": "provideCodeHighlight"
      }
    },
    "definitions": {
      "versions": {
        "0.1.0": "provideDefinitions"
      }
    },
    "find-references": {
      "versions": {
        "0.1.0": "provideFindReferences"
      }
    },
    "outline-view": {
      "versions": {
        "0.1.0": "provideOutlines"
      }
    },
    "refactor": {
      "versions": {
        "0.1.0": "provideRefactor",
        "0.2.0": "provideRefactorWithPrepare"
      }
    }
  }
}
